buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.novoda:bintray-release:0.8.0'
        classpath 'ch.raffael.pegdown-doclet:pegdown-doclet:1.3'
    }
}

plugins {
    // create safely a new release tag
    id 'pl.allegro.tech.build.axion-release' version '1.3.4'

    // publish release artifacts to github
    id "co.riiid.gradle" version "0.4.2"
}

// default android plugin
apply plugin: 'com.android.library'

// publish release artifacts to bintray repository
apply plugin: 'com.novoda.bintray-release'

// interpret javadoc comments with markdown
apply plugin: 'ch.raffael.pegdown-doclet'

// custom connectedCheck to access test artifacts from device
//apply from: "build.connectedCheckCustomized.gradle"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        // v8 ist lowest min sdk which supported by espresso
        // v9 ist lowest min sdk which supported by support libraries since 24.2.0
        // v14 ist lowest min sdk which supported by espresso since 3.1.0
        minSdkVersion 14
        targetSdkVersion 29

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        debug {
            // support code coverage for testing
            testCoverageEnabled = true
        }
    }
    lintOptions {
        // ignore error: InvalidPackage: Package not included in Android (referenced by JUnit)
        // this is ok because this library will only be a test dependency
        disable 'InvalidPackage'
    }

    testOptions {
        // Disable animations to speed up ui test execution and reduce flakiness.
        animationsDisabled = true
    }

    useLibrary 'android.test.mock'
}

repositories {
    google()
    jcenter()
}

dependencies {
    implementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    implementation 'androidx.test.espresso:espresso-intents:3.2.0'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    // real uiautomator is not accessible inside Android Studio when used as compile dependency
    compileOnly project(':uiautomator-noop')

    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.drawerlayout:drawerlayout:1.0.0'
}

// ##################################################
// read the last git release tag
// Original code see: http://ryanharter.com/blog/2013/07/30/automatic-versioning-with-git-and-gradle/
//
def currentReleaseTag = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--match', 'release*'
        standardOutput = stdout
        ignoreExitValue = true
    }
    def releaseTag = stdout.toString().trim()
    return releaseTag ? releaseTag : "release-0.0.0"
}

// ##################################################
// Plugin configuration to create release tag and push it to github
//
scmVersion {
    tag {
        prefix = 'release'
    }
}

// ##################################################
// Plugin configuration to publish release artifacts to bintray
//
publish {
    groupId = 'de.nenick'
    artifactId = 'espresso-macchiato'
    publishVersion = currentReleaseTag().replace("release-", "")
    desc = 'Oh hi, this is a nice description for a project, right?'
    website = 'https://github.com/nenick/espresso-macchiato'
    licences = ['AML'] // AML = MIT license http://spdx.org/licenses/
    autoPublish = true
}

// ##################################################
// Plugin configuration to publish release artifacts to github
//
github {
    //noinspection GroovyAssignabilityCheck
    owner = project.hasProperty("githubUser") ? project.property("githubUser") : "undefined"
    repo = 'espresso-macchiato'
    token = project.hasProperty("githubKey") ? project.property("githubKey") : "undefined"
    tagName = currentReleaseTag()
    targetCommitish = 'master'
    name = currentReleaseTag()
    body = new File(projectDir, '../RELEASE_NOTES.md').text
    assets = ['espresso-macchiato/build/outputs/aar/espresso-macchiato-release.aar']
}

// ##################################################
// Support package linking for javadoc
//
project.gradle.projectsEvaluated {
    project.tasks.withType Javadoc.class, {
        it.options {
            addStringOption('sourcepath', 'src/main/java')
            addStringOption('subpackages', 'de.nenick.espressomacchiato')
        }
    }
}